#!/usr/bin/env python3
"""
üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ - –°–∏—Å—Ç–µ–º–∞ –ê–≥–µ–Ω—Ç–æ–≤
"""

import asyncio
from simple_agents import run_tasks, create_task, AgentTeam

# üéØ –°–£–ü–ï–† –ü–†–û–°–¢–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï

async def example_1():
    """–ü—Ä–∏–º–µ—Ä 1: –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüåü –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n")
    
    tasks = [
        create_task("researcher", "–ò–∑—É—á–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –≤—ã–±—Ä–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"),
        create_task("coder", "–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        create_task("tester", "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"),
        create_task("reviewer", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É")
    ]
    
    await run_tasks(tasks)

async def example_2():
    """–ü—Ä–∏–º–µ—Ä 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–∞"""
    print("\nüêõ –ó–ê–î–ê–ß–ê: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ –≤ —Å–∏—Å—Ç–µ–º–µ\n")
    
    tasks = [
        create_task("researcher", "–ù–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –±–∞–≥–∞ –≤ –ª–æ–≥–∞—Ö"),
        create_task("coder", "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É"),
        create_task("tester", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –±–∞–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"),
        create_task("reviewer", "–£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ fix –Ω–µ —Å–ª–æ–º–∞–ª –¥—Ä—É–≥–æ–µ")
    ]
    
    await run_tasks(tasks)

async def example_3():
    """–ü—Ä–∏–º–µ—Ä 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("\n‚ú® –ó–ê–î–ê–ß–ê: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é\n")
    
    tasks = [
        create_task("researcher", "–ò–∑—É—á–∏—Ç—å API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"),
        create_task("coder", "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"),
        create_task("tester", "–ù–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"),
        create_task("reviewer", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫")
    ]
    
    await run_tasks(tasks)

# üéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú
async def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –∞–≥–µ–Ω—Ç–∞–º–∏"""
    team = AgentTeam()
    
    print("\nüéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú –ê–ì–ï–ù–¢–û–í")
    print("=" * 40)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –∞–≥–µ–Ω—Ç–æ–≤")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ã—Å—Ç—Ä—ã–µ –∑–∞–¥–∞—á–∏")
        print("3. –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
        
        if choice == "1":
            team.show_agents()
            
        elif choice == "2":
            print("\n–ë—ã—Å—Ç—Ä—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:")
            print("a. –°–æ–∑–¥–∞—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            print("b. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥")
            print("c. –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é")
            
            scenario = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π (a-c): ")
            
            if scenario == "a":
                await example_1()
            elif scenario == "b":
                await example_2()
            elif scenario == "c":
                await example_3()
                
        elif choice == "3":
            tasks = []
            print("\n–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á (–≤–≤–µ–¥–∏—Ç–µ '–≥–æ—Ç–æ–≤–æ' –¥–ª—è –∑–∞–ø—É—Å–∫–∞)")
            
            while True:
                agent = input("\n–ê–≥–µ–Ω—Ç (researcher/coder/tester/reviewer): ")
                if agent == "–≥–æ—Ç–æ–≤–æ":
                    break
                    
                task = input("–ó–∞–¥–∞—á–∞: ")
                tasks.append(create_task(agent, task))
                
            if tasks:
                await run_tasks(tasks)
                
        elif choice == "4":
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

# üèÉ –ó–ê–ü–£–°–ö
if __name__ == "__main__":
    print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë     ü§ñ –°–ò–°–¢–ï–ú–ê –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–´–• –ê–ì–ï–ù–¢–û–í   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–ü—Ä–æ—Å—Ç–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ
–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤.

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
1. python quick_start.py - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤ —Å–≤–æ–π –∫–æ–¥:
   from simple_agents import run_tasks, create_task
""")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    asyncio.run(interactive_mode())